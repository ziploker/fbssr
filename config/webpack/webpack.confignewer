//const { env, webpackConfig, merge } = require("shakapacker");
const { env, webpackConfig, merge } = require("shakapacker");
//const customConfig = require("./custom");
const customConfig2 = require("./custom2");
//const webpackBundleAnalyzer = require("./webpack-bundle-analyzer");
//const alpha = require("./alpha");
//const custom3 = require("./custom3");

// See the shakacode/shakapacker README and docs directory for advice on customizing your webpackConfig.

const { existsSync } = require("fs");
const { resolve } = require("path");
console.log("11111111111111111111111111111111111111111111111111111");
//console.log(JSON.stringify(webpackConfig, undefined, 2));
const envSpecificConfig = () => {
	const path = resolve(__dirname, `${env.nodeEnv}.js`);

	if (existsSync(path)) {
		console.log(`Loading ENV specific webpack configuration file ${path}`);
		return require(path);
	} else {
		// Probably an error if the file for the NODE_ENV does not exist
		//throw new Error(`Got Error with NODE_ENV = ${env.nodeEnv}`);
		throw new Error(`Could not find file to load ${path}, based on NODE_ENV`);
	}
};

//const webpackConfiguration = envSpecificConfig();
// To debug the webpack configuration
// 1. Uncomment debugger line below
// 2. Run `bin/webpacker --debug-webpacker`
// 3. Examine the webpackConfiguration variable
// 4. Consider adding a 'debugger` line to the beginning of this file.
//debugger;

module.exports = merge(envSpecificConfig);
