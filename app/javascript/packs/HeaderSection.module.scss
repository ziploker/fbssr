.headerWrapper {
	position: relative;
	display: grid;
	grid-template-columns: minmax(100px, 200px) 1fr minmax(100px, max-content);
	grid-template-rows: 85px;
	grid-template-areas: "headerLogo . headerLeaf ";
	min-width: 100vw;
	max-width: 3000px;
	overflow: hidden;
	grid-gap: 8px;
	z-index: 51;
}

.topBackgroundBar {
	/* position: ${(props) => (props.logoScrolled ? "fixed" : "fixed")};
	opacity: ${(props) => (props.logoScrolled ? "1" : "0")}; */
	top: 0;
	width: 100%;
	height: 40px;
	background-color: black;
	transition: all 0.2s linear;
	z-index: 50;
	-webkit-backface-visibility: hidden;
	background: rgb(255, 255, 255);
	background: -moz-linear-gradient(
		90deg,
		rgba(255, 255, 255, 0.8897758932674632) 38%,
		rgba(0, 0, 0, 0.9009803750601804) 59%
	);
	background: -webkit-linear-gradient(
		90deg,
		rgba(255, 255, 255, 0.8897758932674632) 38%,
		rgba(0, 0, 0, 0.9009803750601804) 59%
	);
	background: linear-gradient(
		90deg,
		rgba(255, 255, 255, 0.8897758932674632) 38%,
		rgba(0, 0, 0, 0.9009803750601804) 59%
	);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#ffffff",endColorstr="#000000",GradientType=1);
}

.logoText {
	/* position: ${(props) => (props.logoScrolled ? "fixed" : "initial")};
	top: ${(props) => (props.logoScrolled ? "4px" : "initial")}; */

	/* font-family: "Permanent Marker", cursive;
	font-style: normal;
	font-weight: normal;
	font-size: 22px;
	letter-spacing: -1px;
	color: #010101; */

	grid-area: headerLogo;
	padding: 0 0 0 15px;
	justify-self: start;
	align-self: center;
	/* width: ${(props) => (props.logoScrolled ? "100px" : "100%")}; */
	cursor: pointer;

	z-index: 51;

	span {
		color: rgb(241, 203, 203);
	}
}

.headerLeafImage {
	@media only screen and (max-width: 500px) {
		margin-right: -90px;
	}

	@media only screen and (max-width: 400px) {
		margin-right: -190px;
	}

	@media only screen and (max-width: 305px) {
		margin-right: -222px;
	}

	@media only screen and (max-width: 265px) {
		display: none;
	}

	min-width: 400px;
	max-height: 100%;
	max-width: 95%;
	grid-area: headerLeaf;
	justify-self: end;
	align-self: center;

	/* opacity: ${(props) =>
		props.hamburgerScrolled || props.longNavScrolled ? "0" : "1"}; */

	//transition: all 0.2s linear;
}

.longNav {
	@media only screen and (max-width: 500px) {
		display: none;
	}

	grid-area: headerLeaf;
	color: white;
	align-self: center;
	justify-self: end;
	margin: 0 -25px;
	display: flex;
	// position: ${(props) => (props.longNavScrolled ? "fixed" : "initial")};
	// top: ${(props) => (props.longNavScrolled ? "-3px" : "initial")};
	// color: ${(props) => (props.longNavScrolled ? "white" : "white")};

	ul {
		list-style: none;
		margin-right: 40px;
		display: flex;
		align-items: baseline;
		color: inherit;

		li {
			@media only screen and (max-width: 666px) {
				padding: 0px 12px;
			}

			display: inline-block;
			padding: 0px 20px;

			font-weight: 500;
			font-size: 16px;
			line-height: 45px;
			color: inherit;
			text-decoration: none;
			cursor: pointer;
			&:hover {
				color: rgb(241, 203, 203);
			}

			a {
				transition: all 0.3s ease 0s;
				font-weight: 500;
				font-size: 16px;
				line-height: 45px;
				color: inherit;
			}
		}
	}
}

.hamburgerMenu {
	position: relative;
	grid-area: 1/3/2/4;
	justify-self: end;
	align-self: center;
	padding-right: 1em;

	@media only screen and (max-width: 500px) {
		// position: ${(props) => (props.hamburgerScrolled ? "fixed" : "initial")};
		// top: ${(props) => (props.hamburgerScrolled ? "7px" : "initial")};
	}

	button {
		div {
			background: white;
			color: white;

			@media only screen and (max-width: 266px) {
				background: black;
				color: black;
			}
		}
	}
}
